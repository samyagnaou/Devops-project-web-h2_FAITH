@page "/timeline"
@inherits TimelineBase
@using Faith.Shared.Constants;

<PageTitle>Timeline</PageTitle>

<AuthorizeView Roles="@Roles.Student">
    <MudStack Row="true" Class="mb-4">
        <MudTextField @bind-Value="PostMessageRequest.Text"
                      Label="Write a message... "
                      Variant="Variant.Text"
                      Margin="Margin.Dense" />
        <MudButton Variant="Variant.Filled"
                   EndIcon="@Icons.Material.Filled.Send"
                   Color="Color.Primary"
                   Size="Size.Small"
                   Class="align-self-end"
                   Style="height: 37px"
                   OnClick="PostMessage">
            Send
        </MudButton>
    </MudStack>
</AuthorizeView>
<AuthorizeView Roles="@Roles.Mentor">
    <MudPaper Elevation="25" Class="mb-3">
        <MudToolBar>
            <MudSpacer />
            <MudTooltip Text="Show archived messages">
                <MudIconButton Icon="@Icons.Material.Outlined.Archive"
                               OnClick="ToggleArchivedMessages" />
            </MudTooltip>
        </MudToolBar>
    </MudPaper>
</AuthorizeView>
<MudGrid>
    <MudItem xs="12" md="6">
        @if (ShowArchivedMessages)
        {
            @foreach (var message in ArchivedMessages!)
            {
                <Post Message="@message"
              UserRole="@Role"
              ShowMenu="ShowMenu"
              ArchiveAMessage="ArchiveAMessage" />
            }
        }
        else
        {
            @foreach (var message in Messages!)
            {
                <Post Message="@message"
              UserRole="@Role"
              ShowMenu="ShowMenu"
              ArchiveAMessage="ArchiveAMessage" />
            }
        }
    </MudItem>
    <MudItem xs="12" md="6">
        @if (SelectedMessage != null)
        {
            <MudPaper Class="gap-2">
                <div class="">
                    <Post Message="@SelectedMessage"
                      UserRole="@Role"
                      ShowMenu="ShowMenu"
                      ArchiveAMessage="ArchiveAMessage" />
                </div>
                <div class="d-flex flex-grow-1">
                    <MudForm @onkeydown="(e) => OnKeyDown(e, SelectedMessage.Id)"
                         Class="px-5 my-2 d-flex flex-grow-1 gap-4">
                        <MudTextField @bind-Value="AddCommentRequest.Text"
                                  Label="Write a comment... "
                                  Variant="Variant.Text"
                                  Margin="Margin.Dense"
                                  Required="true"
                                  Class="mb-5" />
                        <div class="align-self-center">
                            <MudFab Color="Color.Primary"
                                Size="Size.Small"
                                StartIcon="@Icons.Material.Filled.Send"
                                Class="fab"
                                OnClick="() => AddComment(SelectedMessage.Id)" />
                        </div>
                    </MudForm>
                </div>
                @if (SelectedMessage.Comments.Any())
                {
                    @foreach (var comment in SelectedMessage.Comments)
                    {
                        var userId = comment.Student != null ?
                        comment.Student.MemberId : comment.Mentor!.MemberId;
                        var showActions = UserId == userId;
                        <div class="px-4">
                            <MudCard Class="rounded mt-2 border-double">
                                <MudCardHeader>
                                    <CardHeaderAvatar>
                                        <MudAvatar Class="bg-dark-pink">@userId[0]</MudAvatar>
                                    </CardHeaderAvatar>
                                    <CardHeaderContent>
                                        <MudText Typo="Typo.body1">@userId</MudText>
                                        <MudText Typo="Typo.body2">@comment.CreatedAt.ToString()</MudText>
                                    </CardHeaderContent>
                                    <CardHeaderActions>
                                        @if (showActions)
                                        {
                                            <MudTooltip Text="Edit comment">
                                                <MudIconButton Icon="@Icons.Material.Filled.Edit"
                                               Color="Color.Primary"
                                               Size="Size.Small"
                                               OnClick="() => EditAComment(comment)" />
                                            </MudTooltip>
                                            <MudTooltip Text="Delete comment">
                                                <MudIconButton Icon="@Icons.Material.Filled.Delete"
                                               Color="Color.Error"
                                               Size="Size.Small"
                                               OnClick="() => DeleteCommment(comment.Id)" />
                                            </MudTooltip>
                                        }
                                    </CardHeaderActions>
                                </MudCardHeader>
                                <MudCardContent>
                                    <MudText Typo="Typo.body2">@comment.Text</MudText>
                                </MudCardContent>
                            </MudCard>
                            <MudDivider DividerType="DividerType.Middle" Class="my-2" />
                        </div>

                    }
                }
            </MudPaper>


        }
    </MudItem>
</MudGrid>

